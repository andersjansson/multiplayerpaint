<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Canvas test</title>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body>
  <canvas id="canvas" width="490" height="490" style="border: solid black 1px;">

    <script>
      
      
      function CanvasApp()
      {
        this.canvas = document.getElementById('canvas');
        this.context = this.canvas.getContext("2d");
        
        this.isPainting = false;

        this.clickX = new Array();
        this.clickY = new Array();
        this.clickDrag = new Array();

        this.socket = io();
        this.setupListeners();
      }

        CanvasApp.prototype.setupListeners = function()
        {
          var _this = this;

          $(this.canvas).mousedown(function(e){
            var mouseX = e.pageX - this.offsetLeft;
            var mouseY = e.pageY - this.offsetTop;

            _this.isPainting = true;
            _this.addClick(mouseX, mouseY);
            //_this.redraw();
          });

          $(this.canvas).mousemove(function(e){
            if(_this.isPainting){
              _this.addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
              //_this.redraw();
            }
          });

          $(this.canvas).mouseup(function(e){
            _this.isPainting = false;
          });

          $(this.canvas).mouseleave(function(e){
            _this.isPainting = false;
          });

          this.socket.on("otherUserDrawing", function(data){
            var parsedData = JSON.parse(data);
            _this.addClickOther(parsedData.x, parsedData.y, parsedData.d);
            //_this.redraw();
          });
        }      

        CanvasApp.prototype.addClickOther = function(x, y, dragging)
        {
          this.clickX.push(x);
          this.clickY.push(y);
          this.clickDrag.push(dragging);
        }

        CanvasApp.prototype.addClick = function(x, y, dragging)
        {
          /*this.socket.emit("draw", JSON.stringify({
            "x" : x,
            "y" : y,
            "d" : dragging
          }));*/
          
          this.clickX.push(x);
          this.clickY.push(y);
          this.clickDrag.push(dragging);
        }



        var canvas2  = document.createElement("canvas");
        var context2 = canvas2.getContext("2d");

        CanvasApp.prototype.redraw = function(){
          //this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height); 
          
          this.context.strokeStyle = "#df4b26";
          this.context.lineJoin = "round";
          this.context.lineWidth = 5;
              
          for(var i=0; i < this.clickX.length; i++) {    
            var x = this.context.beginPath();
            console.log(x);
            if(this.clickDrag[i] && i){
              this.context.moveTo(this.clickX[i-1], this.clickY[i-1]);
             }else{
               this.context.moveTo(this.clickX[i]-1, this.clickY[i]);
             }
             this.context.lineTo(this.clickX[i], this.clickY[i]);
             this.context.closePath();
             this.context.stroke();
          }
        }

      var app = new CanvasApp();
    </script>
</body>
</html>